labs(title = "Heights and Medals of Olympic Athletes")
return(plot)
}
athlete_height(athlete_df)
athlete_height(athlete_df)
athlete_height <- function(dataset) {
dataset$Medal[is.na(dataset$Medal)] <- "Didn't Medal"
plot <- ggplot(data = dataset) +
geom_boxplot(mapping = aes(x = Medal, y = Height)) +
scale_x_discrete(limits = c("Gold", "Silver", "Bronze", "Didn't Medal"))
labs(title = "Heights and Medals of Olympic Athletes")
return(plot)
}
athlete_height <- function(dataset) {
dataset$Medal[is.na(dataset$Medal)] <- "Didn't Medal"
plot <- ggplot(data = dataset) +
geom_boxplot(mapping = aes(x = Medal, y = Height)) +
scale_x_discrete(limits = c("Gold", "Silver", "Bronze", "Didn't Medal"))
labs(title = "Heights and Medals of Olympic Athletes")
return(plot)
}
athlete_height(athlete_df)
athlete_height <- function(dataset) {
dataset$Medal[is.na(dataset$Medal)] <- "Didn't Medal"
plot <- ggplot(data = dataset) +
geom_boxplot(mapping = aes(x = Medal, y = Height)) +
scale_x_discrete(limits = c("Gold", "Silver", "Bronze", "Didn't Medal"))
labs(title = "Heights and Medals of Olympic Athletes")
return(plot)
}
athlete_height(athlete_df)
athlete_height <- function(dataset) {
dataset$Medal[is.na(dataset$Medal)] <- "Didn't Medal"
plot <- ggplot(data = dataset) +
geom_boxplot(mapping = aes(x = Medal, y = Height)) +
scale_x_discrete(limits = c("Gold", "Silver", "Bronze", "Didn't Medal"))
labs(title = "Heights and Medals of Olympic Athletes")
return(plot)
}
athlete_height(athlete_df)
athlete_height <- function(dataset) {
dataset$Medal[is.na(dataset$Medal)] <- "Didn't Medal"
plot <- ggplot(data = dataset) +
geom_boxplot(mapping = aes(x = Medal, y = Height)) +
scale_x_discrete(limits = c("Gold", "Silver", "Bronze", "Didn't Medal")) +
labs(title = "Heights and Medals of Olympic Athletes")
return(plot)
}
athlete_height(athlete_df)
library(dplyr)
library(stringr)
library(leaflet)
library(ggplot2)
library(tidyr)
library(reshape2)
df <- read.csv("Data/120 Years of Olympic History/athlete_events.csv", stringsAsFactors = FALSE)
coutries_bronze_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
filter(Medal == "Bronze") %>%
summarize(Bronze_Count = n()) %>%
arrange(Sport)
coutries_silver_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
filter(Medal == "Silver") %>%
summarize(Silver_Count = n()) %>%
arrange(Sport)
coutries_gold_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
filter(Medal == "Gold") %>%
summarize(Gold_Count = n()) %>%
arrange(Sport)
coutries_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
summarize(Count = n()) %>%
arrange(Sport)
aggregated_table <- coutries_bronze_count %>%
left_join(coutries_silver_count) %>%
left_join(coutries_gold_count) %>%
replace_na(list(Silver_Count = 0, Gold_Count = 0)) %>%
mutate(score = Bronze_Count + Silver_Count * 2 + Gold_Count * 3)
View(aggregated_table)
View(aggregated_table)
TOP_10_country <- aggregated_table %>%
group_by(Team) %>%
summarize(sum_score = sum(score)) %>%
arrange(-sum_score) %>%
slice_head(n = 10)
best_sports <- function(cn) {
return (aggregated_table %>%
filter(Team == cn) %>%
arrange(-score) %>%
select(Team, Sport, Bronze_Count, Silver_Count, Gold_Count) %>%
slice_head(n = 5))
}
for (cn in TOP_10_country$Team) {
c_list[[cn]] = best_sports(cn)
}
for (cn in TOP_10_country$Team) {
c_list[[cn]] = best_sports(cn)
}
melt_plot <- function(df) {
mdf <- melt(df)
return (ggplot(data = mdf, aes(x = Sport, y = value, fill = variable)) +
geom_col(position="dodge") +
geom_text(aes(label = value), position = position_dodge(width = 0.9)))
}
for (cn in TOP_10_country$Team) {
plot_list[[cn]] = melt_plot(c_list[[cn]])
}
library(dplyr)
library(stringr)
library(leaflet)
library(ggplot2)
library(tidyr)
library(reshape2)
df <- read.csv("Data/120 Years of Olympic History/athlete_events.csv", stringsAsFactors = FALSE)
coutries_bronze_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
filter(Medal == "Bronze") %>%
summarize(Bronze_Count = n()) %>%
arrange(Sport)
coutries_silver_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
filter(Medal == "Silver") %>%
summarize(Silver_Count = n()) %>%
arrange(Sport)
coutries_gold_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
filter(Medal == "Gold") %>%
summarize(Gold_Count = n()) %>%
arrange(Sport)
coutries_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
summarize(Count = n()) %>%
arrange(Sport)
aggregated_table <- coutries_bronze_count %>%
left_join(coutries_silver_count) %>%
left_join(coutries_gold_count) %>%
replace_na(list(Silver_Count = 0, Gold_Count = 0)) %>%
mutate(score = Bronze_Count + Silver_Count * 2 + Gold_Count * 3)
TOP_10_country <- aggregated_table %>%
group_by(Team) %>%
summarize(sum_score = sum(score)) %>%
arrange(-sum_score) %>%
slice_head(n = 10)
best_sports <- function(cn) {
return (aggregated_table %>%
filter(Team == cn) %>%
arrange(-score) %>%
select(Team, Sport, Bronze_Count, Silver_Count, Gold_Count) %>%
slice_head(n = 5))
}
c_list <- vector(mode = "list", length = 0)
for (cn in TOP_10_country$Team) {
c_list[[cn]] = best_sports(cn)
}
melt_plot <- function(df) {
mdf <- melt(df)
return (ggplot(data = mdf, aes(x = Sport, y = value, fill = variable)) +
geom_col(position="dodge") +
geom_text(aes(label = value), position = position_dodge(width = 0.9)))
}
plot_list<- vector(mode = "list", length = 0)
for (cn in TOP_10_country$Team) {
plot_list[[cn]] = melt_plot(c_list[[cn]])
}
print(plot_list$`United States`)
print(plot_list$`Soviet Union`)
print(plot_list$Germany)
print(plot_list$Italy)
print(plot_list$`Great Britain`)
print(plot_list$France)
print(plot_list$Sweden)
print(plot_list$Canada)
print(plot_list$Australia)
print(plot_list$Hungary)
install.packages("reshape2")
library(dplyr)
library(stringr)
library(leaflet)
library(ggplot2)
library(tidyr)
library(reshape2)
coutries_bronze_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
filter(Medal == "Bronze") %>%
summarize(Bronze_Count = n()) %>%
arrange(Sport)
coutries_silver_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
filter(Medal == "Silver") %>%
summarize(Silver_Count = n()) %>%
arrange(Sport)
coutries_gold_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
filter(Medal == "Gold") %>%
summarize(Gold_Count = n()) %>%
arrange(Sport)
coutries_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
summarize(Count = n()) %>%
arrange(Sport)
aggregated_table <- coutries_bronze_count %>%
left_join(coutries_silver_count) %>%
left_join(coutries_gold_count) %>%
replace_na(list(Silver_Count = 0, Gold_Count = 0)) %>%
mutate(score = Bronze_Count + Silver_Count * 2 + Gold_Count * 3)
TOP_10_country <- aggregated_table %>%
group_by(Team) %>%
summarize(sum_score = sum(score)) %>%
arrange(-sum_score) %>%
slice_head(n = 10)
best_sports <- function(cn) {
return (aggregated_table %>%
filter(Team == cn) %>%
arrange(-score) %>%
select(Team, Sport, Bronze_Count, Silver_Count, Gold_Count) %>%
slice_head(n = 5))
}
c_list <- vector(mode = "list", length = 0)
for (cn in TOP_10_country$Team) {
c_list[[cn]] = best_sports(cn)
}
melt_plot <- function(df) {
mdf <- melt(df)
return (ggplot(data = mdf, aes(x = Sport, y = value, fill = variable)) +
geom_col(position="dodge") +
geom_text(aes(label = value), position = position_dodge(width = 0.9)))
}
plot_list<- vector(mode = "list", length = 0)
for (cn in TOP_10_country$Team) {
plot_list[[cn]] = melt_plot(c_list[[cn]])
}
print(plot_list$`United States`)
print(plot_list$`Soviet Union`)
print(plot_list$Germany)
print(plot_list$Italy)
print(plot_list$`Great Britain`)
print(plot_list$France)
print(plot_list$Sweden)
print(plot_list$Canada)
print(plot_list$Australia)
print(plot_list$Hungary)
library(lintr)
lint(Athleteheightchart.R)
lint("Athleteheightchart.R")
lint("Athleteheightchart.R")
lint("Athleteheightchart.R")
lint("Athleteheightchart.R")
## File with a function that returns a boxplot chart of athlete's heights
library(dplyr)
library(ggplot2)
library(forcats)
athlete_df <- read.csv("Data/120 Years of Olympic History/athlete_events.csv")
athlete_height <- function(dataset) {
dataset$Medal[is.na(dataset$Medal)] <- "Didn't Medal"
plot <- ggplot(data = dataset) +
geom_boxplot(mapping = aes(x = Medal, y = Height)) +
scale_x_discrete(limits = c("Gold", "Silver", "Bronze", "Didn't Medal")) +
labs(title = "Heights and Medals of Olympic Athletes")
return(plot)
}
athlete_height(athlete_df)
library(lintr)
lint("WinPercentageByCountryChart.R")
athlete_height <- function(dataset) {
dataset$Medal[is.na(dataset$Medal)] <- "Didn't Medal"
plot <- ggplot(data = dataset) +
geom_boxplot(mapping = aes(x = Medal, y = Height)) +
scale_x_discrete(limits = c("Gold", "Silver", "Bronze", "Didn't Medal")) +
labs(title = "Heights and Medals of Olympic Athletes")
return(plot)
}
athlete_df <- read.csv("Data/120 Years of Olympic History/athlete_events.csv")
athlete_height <- function(dataset) {
dataset$Medal[is.na(dataset$Medal)] <- "Didn't Medal"
plot <- ggplot(data = dataset) +
geom_boxplot(mapping = aes(x = Medal, y = Height)) +
scale_x_discrete(limits = c("Gold", "Silver", "Bronze", "Didn't Medal")) +
labs(title = "Heights and Medals of Olympic Athletes")
return(plot)
}
library(dplyr)
library(stringr)
library(leaflet)
library(ggplot2)
library(tidyr)
library(reshape2)
df <- read.csv("Data/120 Years of Olympic History/athlete_events.csv", stringsAsFactors = FALSE)
coutries_bronze_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
filter(Medal == "Bronze") %>%
summarize(Bronze_Count = n()) %>%
arrange(Sport)
coutries_silver_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
filter(Medal == "Silver") %>%
summarize(Silver_Count = n()) %>%
arrange(Sport)
coutries_gold_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
filter(Medal == "Gold") %>%
summarize(Gold_Count = n()) %>%
arrange(Sport)
coutries_count <- df %>%
select(Team, Sport, Medal) %>%
filter(!is.na(Medal)) %>%
group_by(Team, Sport) %>%
summarize(Count = n()) %>%
arrange(Sport)
aggregated_table <- coutries_bronze_count %>%
left_join(coutries_silver_count) %>%
left_join(coutries_gold_count) %>%
replace_na(list(Silver_Count = 0, Gold_Count = 0)) %>%
mutate(score = Bronze_Count + Silver_Count * 2 + Gold_Count * 3)
TOP_10_country <- aggregated_table %>%
group_by(Team) %>%
summarize(sum_score = sum(score)) %>%
arrange(-sum_score) %>%
slice_head(n = 10)
best_sports <- function(cn) {
return (aggregated_table %>%
filter(Team == cn) %>%
arrange(-score) %>%
select(Team, Sport, Bronze_Count, Silver_Count, Gold_Count) %>%
slice_head(n = 5))
}
c_list <- vector(mode = "list", length = 0)
for (cn in TOP_10_country$Team) {
c_list[[cn]] = best_sports(cn)
}
melt_plot <- function(df) {
mdf <- melt(df)
return (ggplot(data = mdf, aes(x = Sport, y = value, fill = variable)) +
geom_col(position="dodge") +
labs(title = paste0("Top 5 best performed sports by ", df$Team[1])) +
geom_text(aes(label = value), position = position_dodge(width = 0.9)))
}
plot_list<- vector(mode = "list", length = 0)
for (cn in TOP_10_country$Team) {
plot_list[[cn]] = melt_plot(c_list[[cn]])
}
print(plot_list$`United States`)
print(plot_list$`Soviet Union`)
print(plot_list$Germany)
print(plot_list$Italy)
print(plot_list$`Great Britain`)
print(plot_list$France)
print(plot_list$Sweden)
print(plot_list$Canada)
print(plot_list$Australia)
print(plot_list$Hungary)
library(dplyr)
data <- read.csv("/Users/JackTheSon1/Desktop/GitHub/FinalProjectH6/Data/120 Years of Olympic History/athlete_events.csv")
total_ath <- length(unique(data$Name))
total_events <- length(unique(data$Event))
total_sports <- length(unique(data$Sport))
unique_city <- data %>% group_by(City) %>%
summarize(Hosted = length(unique(Year))) %>%
arrange(-Hosted) %>%
nrow()
two_host <- data %>% group_by(City) %>%
summarize(Hosted = length(unique(Year))) %>%
arrange(-Hosted) %>%
filter(Hosted > 1) %>%
nrow()
three_host <- data %>% group_by(City) %>%
summarize(Hosted = length(unique(Year))) %>%
arrange(-Hosted) %>%
filter(Hosted > 2) %>%
nrow()
male <- data %>% filter(Sex == "M") %>%
group_by(Name) %>%
summarize(Appearances = n()) %>%
nrow / total_ath * 100
male <- round(male, digits = 1)
female <- data %>% filter(Sex == "F") %>%
group_by(Name) %>%
summarize(Appearances = n()) %>%
nrow / total_ath * 100
female <- round(female, digits = 1)
medals <- data %>% group_by(Medal) %>% summarize(total = n()) %>% filter(!is.na(Medal))
sum_medal <- sum(medals$total)
data <- read.csv("/Users/JackTheSon1/Desktop/GitHub/FinalProjectH6/Data/120 Years of Olympic History/athlete_events.csv")
data <- read.csv("Data/120 Years of Olympic History/athlete_events.csv")
total_ath <- length(unique(data$Name))
total_events <- length(unique(data$Event))
total_sports <- length(unique(data$Sport))
unique_city <- data %>% group_by(City) %>%
summarize(Hosted = length(unique(Year))) %>%
arrange(-Hosted) %>%
nrow()
two_host <- data %>% group_by(City) %>%
summarize(Hosted = length(unique(Year))) %>%
arrange(-Hosted) %>%
filter(Hosted > 1) %>%
nrow()
three_host <- data %>% group_by(City) %>%
summarize(Hosted = length(unique(Year))) %>%
arrange(-Hosted) %>%
filter(Hosted > 2) %>%
nrow()
male <- data %>% filter(Sex == "M") %>%
group_by(Name) %>%
summarize(Appearances = n()) %>%
nrow / total_ath * 100
male <- round(male, digits = 1)
female <- data %>% filter(Sex == "F") %>%
group_by(Name) %>%
summarize(Appearances = n()) %>%
nrow / total_ath * 100
female <- round(female, digits = 1)
medals <- data %>% group_by(Medal) %>% summarize(total = n()) %>% filter(!is.na(Medal))
sum_medal <- sum(medals$total)
data <- read.csv("/Users/JackTheSon1/Desktop/GitHub/FinalProjectH6/Data/120 Years of Olympic History/athlete_events.csv")
table <- data %>% group_by(Team) %>% filter(!is.na(Medal)) %>%
summarize(medal_count = n()) %>%
arrange(-medal_count) %>%
head(20)
data <- read.csv("Data/120 Years of Olympic History/athlete_events.csv")
table <- data %>% group_by(Team) %>% filter(!is.na(Medal)) %>%
summarize(medal_count = n()) %>%
arrange(-medal_count) %>%
head(20)
##
library(dplyr)
library(ggplot2)
top_medal_percentages <- function(df) {
medal_percentage_data <- df %>%
group_by(Year, Season, region, Medal) %>%
summarise(TempCnt = n()) %>%
group_by(Year, Season, region) %>%
summarise(RegionMedalPct = sum(TempCnt[!is.na(Medal)]) / sum(TempCnt))
top_regions <- medal_percentage_data %>%
group_by(region) %>%
summarise(TotalPct = sum(RegionMedalPct)) %>%
top_n(5, TotalPct)
graph_data <- inner_join(medal_percentage_data, top_regions)
graph <- ggplot(graph_data, aes(x = Year, y = RegionMedalPct, colour = region)) +
geom_line(size = 1.5) +
ylab("Percentage") +
ggtitle("Percentage of Competing Athletes Who Medaled Grouped By Country") +
facet_grid(rows = vars(Season))
library(lintr)
lint("Athleteheightchart.R")
a
q
library(lintr)
lint("Athleteheightchart.R")
lint("Athleteheightchart.R")
lint("Country_Specialization.R")
lint("Country_Specialization.R")
lint("Country_Specialization.R")
lint("Country_Specialization.R")
lint("Country_Specialization.R")
lint("summary.R")
lint("summary.R")
lint("summary.R")
lint("summary.R")
lint("summary.R")
lint("summary.R")
lint("summarytable.R")
data <- read.csv("Data/120 Years of Olympic History/athlete_events.csv")
table <- data %>%
group_by(Team) %>%
filter(!is.na(Medal)) %>%
summarize(medal_count = n()) %>%
arrange(-medal_count) %>%
head(20)
library(dplyr)
data <- read.csv("Data/120 Years of Olympic History/athlete_events.csv")
table <- data %>%
group_by(Team) %>%
filter(!is.na(Medal)) %>%
summarize(medal_count = n()) %>%
arrange(-medal_count) %>%
head(20)
View(table)
View(table)
lint("summarytable.R")
lint("WinPercentageByCountryChart.R")
lint("WinPercentageByCountryChart.R")
